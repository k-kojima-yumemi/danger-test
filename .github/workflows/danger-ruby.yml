name: "Danger Ruby"
on:
  pull_request:
    types:
      - opened
      - reopened
      - edited

jobs:
  show-env:
    name: Get context
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}" | jq
      - name: Ref
        run: |
          echo "Head: ${{github.head_ref}}"
          echo "Base: ${{github.base_ref}}"
          echo "Ref: ${{github.ref}}"
          echo "Ref name: ${{github.ref_name}}"
          echo "Repo name: ${{github.event.pull_request.head.repo.name}}"
  build:
    name: Danger Ruby
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Dump GitHub context
        id: github_context_step
        env:
          context: ${{ toJSON(github) }}
        run: echo Hello
      - name: Dump event info
        run: echo Hello2
        env:
          context: ${{ toJSON(github.event) }}
      - name: Switch branch
        run: git checkout ${{ github.head_ref }}
      - name: Test ML comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          cat <<EOF >body.txt
          <!-- COMMENT_FOR_TEST -->
          Line 1
          [Link to GitHub](https://github.com)
          Line 3
          Head: ${{github.head_ref}}
          Base: ${{github.base_ref}}
          Ref: ${{github.ref}}
          Ref name: ${{github.ref_name}}
          Run URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
          EOF

          node_comment_id=$(gh pr view ${{ github.event.pull_request.html_url }} --json comments |\
          jq -r 'first(.comments | .[] | select(.author.login = "github-actions") | select(.body | contains("COMMENT_FOR_TEST"))) | .id')
          comment_id=$(gh api /repos/{owner}/{repo}/issues/comments | jq -r 'first(.[] | select(.node_id = "$node_comment_id")) | .id')
          echo "Detected comment id: ${node_comment_id}, ${comment_id}"
          if test -z "$comment_id" ; then
            gh pr comment ${{ github.event.pull_request.html_url }} -F body.txt
          else
            gh api -X GET "/repos/{owner}/{repo}/issues/comments/${comment_id}"
            gh api -X PATCH "/repos/{owner}/{repo}/issues/comments/${comment_id}" -f body='@body.txt'
          fi
      - name: Check reflog
        run: git reflog
      - name: Track all
        run: |
          current_branch=$(git rev-parse --abbrev-ref HEAD)
          git branch -r |\
            grep -v '\->' |\
            grep -v "[^/]\+/${current_branch}$" |\
            grep -v "pull/[0-9]\+/merge" |\
            sed "s,\x1B\[[0-9;]*[a-zA-Z],,g" |\
            while read -r remote; do git branch --track "${remote#origin/}" "$remote" || : ; done
      - name: Show remotes
        run: git show-branch -r
      - name: Show locals
        run: git show-branch
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
      - name: Install
        run: |
          gem install 'danger'
      - name: Danger
        run: danger --fail-on-errors=true --dangerfile=.github/Dangerfile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DANGER_DISABLE_TRANSPILATION: true
          RUN_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
